namespace: sock-shop

global:

java:
  options:
    name: JAVA_OPTS
    value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false

istio:
  enabled: false

# carts
carts:
  replicaCount: 1
  containerPort: 80
  image:
    name: weaveworksdemos/carts
    tag: 0.4.8
  resources:
    limits:
      cpu: 300m
      memory: 1000Mi
    requests:
      cpu: 100m
      memory: 500Mi
  # carts DB
  db:
    image:
      name: mongo
      tag: 4.4.0
    containerPort: 27017
    replicaCount: 1
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 500m
        memory: 512Mi

# catalogue
catalogue:
  replicaCount: 1
  containerPort: 80
  image:
    name: weaveworksdemos/catalogue
    tag: 0.3.5
  resources:
    limits:
      cpu: 100m
      memory: 100Mi
    requests:
      cpu: 100m
      memory: 100Mi
  # catalogue DB
  db:
    image:
      name: weaveworksdemos/catalogue-db
      tag: 0.3.0
    containerPort: 3306
    replicaCount: 1
    env:
      MYSQL_DATABASE: socksdb
      MYSQL_ROOT_PASSWORD: fake_password
    resources:
      limits:
        cpu: 300m
        memory: 500Mi
      requests:
        cpu: 100m
        memory: 300Mi

# frontend
frontend:
  replicaCount: 1
  containerPort: 8079
  image:
    name: weaveworksdemos/front-end
    tag: 0.3.12
  env:
    SESSION_REDIS: "true"
  resources:
    limits:
      cpu: 200m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 300Mi
  service:
    ports:
      port: 80
      targetPort: 8079
      nodePort: 30001

# orders
orders:
  replicaCount: 1
  containerPort: 80
  image:
    name: weaveworksdemos/orders
    tag: 0.4.7
  resources:
    limits:
      cpu: 300m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 200Mi
  # orders DB
  db:
    replicaCount: 1
    image:
      name: mongo
      tag: 4.4.0
    containerPort: 27017

# payment
payment:
  replicaCount: 1
  containerPort: 80
  image:
    name: weaveworksdemos/payment
    tag: 0.4.3
  resources:
    limits:
      cpu: 150m
      memory: 200Mi
    requests:
      cpu: 99m
      memory: 100Mi

# queue-master
queue_master:
  replicaCount: 1
  containerPort: 80
  image:
    name: weaveworksdemos/queue-master
    tag: 0.3.1
  resources:
    limits:
      cpu: 200m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 200Mi

# rabbitmq
rabbitmq:
  replicaCount: 1
  images:
    rabbitmq:
      name: rabbitmq
      tag: 3.6.8-management
      ports:
        - containerPort: 15672
          name: management
        - containerPort: 5672
          name: rabbitmq
    rabbitmq_exporter:
      containerPort: 9090
      name: kbudde/rabbitmq-exporter
      tag: ""
  resources:
    requests:
      memory: 256Mi
      cpu: 350m
    limits:
      memory: 512Mi
      cpu: 1


# session_db
session_db:
  image:
    name: redis
    tag: alpine
  containerPort: 6379
  replicaCount: 1
  resources:
    requests:
      memory: 256Mi
      cpu: 250m
    limits:
      memory: 256Mi
      cpu: 250m
  persistentVolume:
    storageClass: ''
    size: 512Mi

# shipping
shipping:
  image:
    name: weaveworksdemos/shipping
    tag: 0.4.8
  replicaCount: 1
  containerPort: 80
  resources:
    limits:
      cpu: 300m
      memory: 500Mi
    requests:
      cpu: 200m
      memory: 400Mi

# userdb
userdb:
  image:
    repo: weaveworksdemos/user-db
    tag: 0.4.0
  replicaCount: 1
  containerPort: 27017
  resources:
    limits:
      cpu: 300m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 400Mi

# user
user:
  image:
    repo: weaveworksdemos/user
    tag: 0.4.7
  replicaCount: 1
  containerPort: 80
  resources:
    limits:
      cpu: 300m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 400Mi